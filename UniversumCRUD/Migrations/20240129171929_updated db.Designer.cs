// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversumCRUD.Data;

#nullable disable

namespace UniversumCRUD.Migrations
{
    [DbContext(typeof(MVCUniversumDbContext))]
    [Migration("20240129171929_updated db")]
    partial class updateddb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UniversumCRUD.Models.Domain.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lecturers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("UniversumCRUD.Models.Domain.BusinessAndManagementStudent", b =>
                {
                    b.HasBaseType("UniversumCRUD.Models.Domain.Student");

                    b.Property<string>("BusinessAndManagementStudentProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("BusinessAndManagementStudents", (string)null);
                });

            modelBuilder.Entity("UniversumCRUD.Models.Domain.ComputerScienceStudent", b =>
                {
                    b.HasBaseType("UniversumCRUD.Models.Domain.Student");

                    b.Property<string>("ComputerScienceSpecificProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ComputerScienceStudents", (string)null);
                });

            modelBuilder.Entity("UniversumCRUD.Models.Domain.CyberSecurityStudent", b =>
                {
                    b.HasBaseType("UniversumCRUD.Models.Domain.Student");

                    b.Property<string>("CyberSecuritySpecificProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("CyberSecurityStudents", (string)null);
                });

            modelBuilder.Entity("UniversumCRUD.Models.Domain.GraphicDesignStudent", b =>
                {
                    b.HasBaseType("UniversumCRUD.Models.Domain.Student");

                    b.Property<string>("GraphicDesignSpecificProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("GraphicDesignStudents", (string)null);
                });

            modelBuilder.Entity("UniversumCRUD.Models.Domain.BusinessAndManagementStudent", b =>
                {
                    b.HasOne("UniversumCRUD.Models.Domain.Student", null)
                        .WithOne()
                        .HasForeignKey("UniversumCRUD.Models.Domain.BusinessAndManagementStudent", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniversumCRUD.Models.Domain.ComputerScienceStudent", b =>
                {
                    b.HasOne("UniversumCRUD.Models.Domain.Student", null)
                        .WithOne()
                        .HasForeignKey("UniversumCRUD.Models.Domain.ComputerScienceStudent", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniversumCRUD.Models.Domain.CyberSecurityStudent", b =>
                {
                    b.HasOne("UniversumCRUD.Models.Domain.Student", null)
                        .WithOne()
                        .HasForeignKey("UniversumCRUD.Models.Domain.CyberSecurityStudent", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniversumCRUD.Models.Domain.GraphicDesignStudent", b =>
                {
                    b.HasOne("UniversumCRUD.Models.Domain.Student", null)
                        .WithOne()
                        .HasForeignKey("UniversumCRUD.Models.Domain.GraphicDesignStudent", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
